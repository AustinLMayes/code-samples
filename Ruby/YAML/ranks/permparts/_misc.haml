//// BEGIN REPOSITORY HEADER ////

// The code contained in this file is provided without warranty, it was likely grabbed from a closed-source/abandoned project and will
// in most cases not function out of the box. This file is merely intended as a representation of the design pasterns and
// different problem-solving approaches I use to tackle various problems.
// The original file can be found here: https://github.com/Avicus/Website

//// END REPOSITORY HEADER ////

.span2
  %ul.nav.nav-pills.nav-stacked{:role => 'tablist'}
    - Avicus::Application.config.web_perms.each do |g|
      - next if g.id_based
      - next if g == @api_gen
      %li{:role => 'presentation'}
        - human = g.parent_group.text unless g.parent_group.text.nil?
        - human = g.model_name.pluralize.tr('::', ' ').tr('_', ' ') if human.nil?
        %a{'aria-controls' => "misc-#{g.model_name.downcase.tr('::', '_').tr(' ', '_').tr('/', '_')}", 'data-toggle' => 'tab', :href => "#misc-#{g.model_name.to_s.downcase.tr('::', '_').tr(' ', '_').tr('/', '_')}", :role => 'tab'}=titleize(human)
.tab-content
  - Avicus::Application.config.web_perms.each do |g|
    - next if g.id_based
    - next if g == @api_gen
    .tab-pane{:id => "misc-#{g.model_name.downcase.tr('::', '_').tr(' ', '_').tr('/', '_')}", :role => 'tabpanel'}
      = perm_group(g)
